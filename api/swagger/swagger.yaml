swagger: "2.0"
info:
  description: "This is a documentation for restful api endpoints designed as server for EPiC Mail"
  version: "v1"
  title: "EPIC MAIL"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "ilorieazykiel@ymail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "epic-mail-api.herokuapp.com"
basePath: "/api/v1"
tags:
- name: "user"
  description: "User's account"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "message"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /auth/signup:
    post:
      tags:
      - "user"
      summary: "Creates a new user account"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User's account that needs to be created"
        required: true
        schema:
          $ref: "#/definitions/signup"
      responses:
        201:
          description: "User's account created successfully"
          schema:
            $ref: "#/definitions/authResponse"
          
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/errorResponse"
  /auth/login:
    post:
      tags:
      - "user"
      summary: "Log in into user's account"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User's account that needs to be logged into"
        required: true
        schema:
          $ref: "#/definitions/login"
      responses:
        201:
          description: "User's account created successfully"
          schema:
            $ref: "#/definitions/authResponse"
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/errorResponse"
  /messages:
    post:
      tags:
      - "message"
      summary: "Create a new mail and send it to an individual"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "Mail that needs to be sent"
        required: true
        schema:
          $ref: "#/definitions/send"
      responses:
        201:
          description: "Successful"
          schema:
            $ref: "#/definitions/postMessageResponse"
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorResponse"
    get:
      tags:
      - "message"
      summary: "get inbox messages of a user"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/getMessageResponse"
        401:
          description: "unauthorized access"
          schema:
            $ref: "#/definitions/errorResponse"
    put:
      tags:
      - "message"
      summary: "sending a draft mail to a user"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User's account that needs to be logged into"
        required: true
        schema:
          $ref: "#/definitions/senddraft"
      responses:
        200:
          description: "successful operation"
        400:
          description: "invalid input"
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: "unauthorized access"
          schema:
            $ref: "#/definitions/errorResponse"
        404:
          description:  "not found"
          schema:
            $ref: "#/definitions/errorResponse"
  /messages/save:
    post:
      tags:
      - "message"
      summary: "Create a new mail and save it as draft"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Mail that needs to be saved as draft"
        required: true
        schema:
          $ref: "#/definitions/savemessage"
      responses:
        201:
          description: "Successful"
          schema:
            $ref: "#/definitions/postMessageResponse"
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/errorResponse"
  /messages/read:
    get:
      tags:
      - "message"
      summary: "get read mails of a user"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/getMessageResponse"
        404:
          description:  "not found"
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: "unauthorized access"
          schema:
            $ref: "#/definitions/errorResponse"
  /messages/unread:
    get:
      tags:
      - "message"
      summary: "get unread mails of a user"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/getMessageResponse"
        404:
          description:  "not found"
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: "unauthorized access"
          schema:
            $ref: "#/definitions/errorResponse"
  /messages/sent:
    get:
      tags:
      - "message"
      summary: "get all sent mails by a user"
      description: ""
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/getMessageResponse"
        404:
          description:  "not found"
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: "unauthorized access"
          schema:
            $ref: "#/definitions/errorResponse"
  /messages/{id}:
    get:
      tags:
      - "message"
      summary: "get a specific mail with the specified id"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the mail to get"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/getMessageResponse"
        404:
          description:  "not found"
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: "unauthorized access"
          schema:
            $ref: "#/definitions/errorResponse"
    delete:
      tags:
      - "message"
      summary: "delete a specific mail with the specified id"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of the mail to be deleted"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/deleteResponse"
        404:
          description:  "not found"
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: "unauthorized access"
          schema:
            $ref: "#/definitions/errorResponse"
          

definitions:
  login:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
  signup:
    type: "object"
    properties:
      email:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      password:
        type: "string"
      rePassword:
        type: "string"
  savemessage:
    type: "object"
    properties:
      subject:
        type: "string"
      message:
        type: "string"
  send:
    type: "object"
    properties:
      subject:
        type: "string"
      message:
        type: "string"
      toUserId:
        type: "integer"
  senddraft:
    type: "object"
    properties:
      id:
        type: "integer"
      subject:
        type: "string"
      message:
        type: "string"
      toUserId:
        type: "integer"
  getMessageResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
            createdOn:
              type: "string"
            subject:
              type: "string"
            message:
              type: "string"
            senderId:
              type: "integer"
            receiverId:
              type: "integer"
            parentMessageId: 
              type: "integer"
            status:
              type: "string"
  postMessageResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "integer"
            createdOn:
              type: "string"
            subject:
              type: "string"
            message:
              type: "string"
            parentMessageId: 
              type: "integer"
            status:
              type: "string"
  authResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            token:
              type: "string"
  deleteResponse:
    type: "object"
    properties:
      status:
        type: "string"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            message:
              type: "string"
  errorResponse:
    type: "object"
    properties:
      status:
        type: "string"
      error:
        type: "string"
    
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"