{
  "swagger": "2.0",
  "info": {
    "description": "This is a documentation for restful api endpoints designed as server for EPiC Mail",
    "version": "v1",
    "title": "EPIC MAIL",
    "contact": {
      "email": "ilorieazykiel@ymail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "epic-mail-api.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "user",
      "description": "User's account",
      "externalDocs": {
        "description": "",
        "url": "https://github.com/Eazybee/EPIC-MAIL"
      }
    },
    {
      "name": "message",
      "description": "Operations about user",
      "externalDocs": {
        "description": "",
        "url": "https://github.com/Eazybee/EPIC-MAIL"
      }
    },
    {
      "name": "group",
      "description": "Operation performed on group",
      "externalDocs": {
        "description": "",
        "url": "https://github.com/Eazybee/EPIC-MAIL"
      }
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "creates a new user account",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User's account that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User's account created successfully",
            "schema": {
              "$ref": "#/definitions/authResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "User Exist",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "log in into user's account",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User's account that needs to be logged into",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logged in successfully ",
            "schema": {
              "$ref": "#/definitions/authResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "Unauthorized: invalid credentials",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/auth/reset": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "request password reset",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User's account that is requesting password requesting",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful: check your mail",
            "schema": {
              "$ref": "#/definitions/authResponse"
            }
          },
          "400": {
            "description": "Invalid input / Email does not exist",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "password request confirmation",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deleteResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "Invalid or Expired token",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": [
          "message"
        ],
        "summary": "create a new mail and send it to an individual",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Mail that needs to be sent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/send"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/postMessageResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "message"
        ],
        "summary": "get inbox mails of a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getMessageResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "message"
        ],
        "summary": "sending a draft mail to a user",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Draft mail that needs to be sent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/senddraft"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/postMessageResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/messages/read": {
      "get": {
        "tags": [
          "message"
        ],
        "summary": "get read mails of a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getMessageResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/messages/unread": {
      "get": {
        "tags": [
          "message"
        ],
        "summary": "get unread mails of a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getMessageResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/messages/sent": {
      "get": {
        "tags": [
          "message"
        ],
        "summary": "get all sent mails by a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getSentMessageResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/messages/draft": {
      "post": {
        "tags": [
          "message"
        ],
        "summary": "save a mail as draft",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Mail that needs to be saved as draft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/savemessage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/postMessageResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "message"
        ],
        "summary": "get drafted mails of a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getDraftMessageResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/messages/sent/{id}": {
      "get": {
        "tags": [
          "message"
        ],
        "summary": "get sent mail with the specified id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the mail to get",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getSentIdMessageResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "message"
        ],
        "summary": "delete sent mail with the specified id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the sent mail to deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deleteResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/messages/sent/{id}/retract": {
      "delete": {
        "tags": [
          "message"
        ],
        "summary": "retract sent mail with the specified id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the sent mail to retracted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deleteResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/messages/{id}": {
      "get": {
        "tags": [
          "message"
        ],
        "summary": "get inbox mail with the specified id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the mail to get",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getMessageIdResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "message"
        ],
        "summary": "delete inbox mail with the specified id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id of the mail to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deleteResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/messages/draft/{id}": {
      "delete": {
        "tags": [
          "message"
        ],
        "summary": "delete draft mail with the specified id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the draft mail to deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deleteResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "tags": [
          "group"
        ],
        "summary": "create a new group",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "User's account that needs to be created",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "confllict: you own another group with same name",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "group"
        ],
        "summary": "get groups of a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/groups/{id}/users": {
      "post": {
        "tags": [
          "group"
        ],
        "summary": "add a user to a specified group",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the group",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Id of user to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userEmail": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "userId": {
                        "type": "integer"
                      },
                      "role": {
                        "type": "string"
                      },
                      "userEmail": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/groups/{id}/messages": {
      "post": {
        "tags": [
          "group"
        ],
        "summary": "send mail to a group",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the group",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "mail to be sent",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/postMessageResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "group"
        ],
        "summary": "sending a draft mail to a group",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the group",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Draft mail that needs to be sent",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "subject": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/postMessageResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/groups/{id}/name": {
      "patch": {
        "tags": [
          "group"
        ],
        "summary": "update a group name",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the group",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "new name of the group",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/groupResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "confllict: you own another group with same name",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "get members of a specified group",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the group",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer"
                      },
                      "userEmail": {
                        "type": "string"
                      },
                      "userRole": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "group"
        ],
        "summary": "delete a group",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id of the group to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deleteResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/groups/{groupId}/users/{userId}": {
      "delete": {
        "tags": [
          "group"
        ],
        "summary": "delete a member from a group",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "id of the group",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "id of the member to be deleted from the group",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/deleteResponse"
            }
          },
          "400": {
            "description": "invalid input",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "unauthorized access",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "signup": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "rePassword": {
          "type": "string"
        }
      }
    },
    "savemessage": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "send": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "receiverEmail": {
          "type": "string"
        }
      }
    },
    "senddraft": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "receiverEmail": {
          "type": "string"
        }
      }
    },
    "getMessageResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "createdOn": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "senderId": {
                "type": "integer"
              },
              "receiverId": {
                "type": "integer"
              },
              "parentMessageId": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "senderEmail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getMessageIdResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "createdOn": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "senderId": {
                "type": "integer"
              },
              "receiverId": {
                "type": "integer"
              },
              "parentMessageId": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "senderEmail": {
                "type": "string"
              },
              "senderFirstName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getSentMessageResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "createdOn": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "senderId": {
                "type": "integer"
              },
              "receiverId": {
                "type": "integer"
              },
              "parentMessageId": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "receiverEmail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getSentIdMessageResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "createdOn": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "senderId": {
                "type": "integer"
              },
              "receiverId": {
                "type": "integer"
              },
              "parentMessageId": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "receiverEmail": {
                "type": "string"
              },
              "receiverFirstName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getDraftMessageResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "createdOn": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "senderId": {
                "type": "integer"
              },
              "parentMessageId": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "receiverEmail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "postMessageResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "createdOn": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "parentMessageId": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "authResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "deleteResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "groupResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "userId": {
                "type": "integer"
              },
              "userEmail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "errorResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "error": {
          "type": "string"
        }
      }
    }
  }
}